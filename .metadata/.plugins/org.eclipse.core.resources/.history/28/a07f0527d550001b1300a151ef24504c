package com.storeapp.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.storeapp.entities.Product;
import com.storeapp.service.ProductService;


//..........8070/storeapp/api/product
@RestController
@RequestMapping("api")
public class ProductRestController {

	private ProductService productService;

	@Autowired
	public ProductRestController(ProductService productService) {
		this.productService = productService;
	}
	//---------all product----------
	@GetMapping(path="product", produces = MediaType.APPLICATION_JSON_VALUE)
	public List<Product> getAllProducts(){
		List<Product> products=productService.getAllProduct();
		return products;
	}
	
	//--------- productbyId----------
	@GetMapping(path="product/{id}", produces = MediaType.APPLICATION_JSON_VALUE)
	public Product getProductById(@PathVariable(name = "id")int productId){
		Product product=productService.getProductById(productId);
		return product;
	}
	
	//---------add new product----------
	@PostMapping(path="product", produces = MediaType.APPLICATION_JSON_VALUE,
			consumes  = MediaType.APPLICATION_JSON_VALUE)
	public Product addProduct(@RequestBody Product product){
		Product productAdded=productService.addProduct(product);
		return productAdded;
	}

	//---------update product----------
	@PutMapping(path="product/{id}", produces = MediaType.APPLICATION_JSON_VALUE,
			consumes  = MediaType.APPLICATION_JSON_VALUE)
	public Product updateProduct(@PathVariable(name = "id")int productId, @RequestBody Product product){
		Product updatedProduct=productService.updateProduct(productId, product);
		return updatedProduct;
	}

	//---------del product---------
	@DeleteMapping(path="product/{id}", produces = MediaType.APPLICATION_JSON_VALUE)
	public Product deleteProduct(@PathVariable(name = "id")int productId){
		Product productDeleted=productService.deleteProduct(productId);
		return productDeleted;
	}
}








