package com.bookapp.config;

import org.springframework.context.annotation.Bean;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.builders.WebSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.crypto.password.NoOpPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.stereotype.Component;

@EnableWebSecurity
public class SecConfig extends WebSecurityConfigurerAdapter {

	// authentication
	@Override
	protected void configure(AuthenticationManagerBuilder auth) throws Exception {
		// right now i am using hard coded username password
		auth.inMemoryAuthentication()
		.withUser("raj").password("raj123").roles("ADMIN")
		.and()
		.withUser("ekta").password("ekta123").roles("MGR")
		.and().
		withUser("gunika").password("gun123").roles("CLERK");
	}

	@Bean
	public PasswordEncoder getEncoder() {
		return NoOpPasswordEncoder.getInstance(); // it means that it is for testing purpose only
	}

	// The purpose of overridng this method is to tell spring sec
	// not to make some resources secure: js, bootstrap, css
	@Override
	public void configure(WebSecurity web) throws Exception {
		web.ignoring().antMatchers("/resources/**");
	}

	// authorization: we define who can access what?

	@Override
	protected void configure(HttpSecurity http) throws Exception {

		http.csrf().disable() //please disable csrf, csrf dont make much sence in REST endpoint
		.authorizeRequests() //please validate all req
		.antMatchers("/admin/**").hasAnyRole("ADMIN")
		.antMatchers("/mgr/**").hasAnyRole("ADMIN","MGR")
		.antMatchers("/clerk/**").hasAnyRole("ADMIN","MGR","CLERK")
		.antMatchers("").hasAnyRole("","")
		
	}

}






